// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render ExpenseFormPage correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EntryFormPage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        "",
        <form
          onSubmit={[Function]}
>
          <label
                    htmlFor="title"
          >
                    Title:
          </label>
          <br />
          <input
                    id="title"
                    name="title"
                    onChange={[Function]}
                    placeholder="Blog title"
                    type="text"
          />
          <br />
          <br />
          <label
                    htmlFor="content"
          >
                    Content:
          </label>
          <br />
          <textarea
                    className="entry__textarea"
                    cols="120"
                    id="content"
                    name="content"
                    onChange={[Function]}
                    placeholder="Please describe the blog"
                    rows="20"
                    type="text"
          />
          <br />
          <br />
          <input
                    className="button"
                    type="submit"
                    value="Save entry"
          />
</form>,
      ],
      "className": "entry__container",
    },
    "ref": null,
    "rendered": Array [
      "",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor="title"
>
              Title:
</label>,
            <br />,
            <input
              id="title"
              name="title"
              onChange={[Function]}
              placeholder="Blog title"
              type="text"
/>,
            <br />,
            <br />,
            <label
              htmlFor="content"
>
              Content:
</label>,
            <br />,
            <textarea
              className="entry__textarea"
              cols="120"
              id="content"
              name="content"
              onChange={[Function]}
              placeholder="Please describe the blog"
              rows="20"
              type="text"
/>,
            <br />,
            <br />,
            <input
              className="button"
              type="submit"
              value="Save entry"
/>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Title:",
              "htmlFor": "title",
            },
            "ref": null,
            "rendered": "Title:",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "title",
              "name": "title",
              "onChange": [Function],
              "placeholder": "Blog title",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Content:",
              "htmlFor": "content",
            },
            "ref": null,
            "rendered": "Content:",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "entry__textarea",
              "cols": "120",
              "id": "content",
              "name": "content",
              "onChange": [Function],
              "placeholder": "Please describe the blog",
              "rows": "20",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "textarea",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "button",
              "type": "submit",
              "value": "Save entry",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "",
          <form
            onSubmit={[Function]}
>
            <label
                        htmlFor="title"
            >
                        Title:
            </label>
            <br />
            <input
                        id="title"
                        name="title"
                        onChange={[Function]}
                        placeholder="Blog title"
                        type="text"
            />
            <br />
            <br />
            <label
                        htmlFor="content"
            >
                        Content:
            </label>
            <br />
            <textarea
                        className="entry__textarea"
                        cols="120"
                        id="content"
                        name="content"
                        onChange={[Function]}
                        placeholder="Please describe the blog"
                        rows="20"
                        type="text"
            />
            <br />
            <br />
            <input
                        className="button"
                        type="submit"
                        value="Save entry"
            />
</form>,
        ],
        "className": "entry__container",
      },
      "ref": null,
      "rendered": Array [
        "",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor="title"
>
                Title:
</label>,
              <br />,
              <input
                id="title"
                name="title"
                onChange={[Function]}
                placeholder="Blog title"
                type="text"
/>,
              <br />,
              <br />,
              <label
                htmlFor="content"
>
                Content:
</label>,
              <br />,
              <textarea
                className="entry__textarea"
                cols="120"
                id="content"
                name="content"
                onChange={[Function]}
                placeholder="Please describe the blog"
                rows="20"
                type="text"
/>,
              <br />,
              <br />,
              <input
                className="button"
                type="submit"
                value="Save entry"
/>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Title:",
                "htmlFor": "title",
              },
              "ref": null,
              "rendered": "Title:",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "title",
                "name": "title",
                "onChange": [Function],
                "placeholder": "Blog title",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Content:",
                "htmlFor": "content",
              },
              "ref": null,
              "rendered": "Content:",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "entry__textarea",
                "cols": "120",
                "id": "content",
                "name": "content",
                "onChange": [Function],
                "placeholder": "Please describe the blog",
                "rows": "20",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "textarea",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "button",
                "type": "submit",
                "value": "Save entry",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`should submit with valid input and no error 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EntryFormPage
    onSubmit={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        "",
        <form
          onSubmit={[Function]}
>
          <label
                    htmlFor="title"
          >
                    Title:
          </label>
          <br />
          <input
                    id="title"
                    name="title"
                    onChange={[Function]}
                    placeholder="Blog title"
                    type="text"
          />
          <br />
          <br />
          <label
                    htmlFor="content"
          >
                    Content:
          </label>
          <br />
          <textarea
                    className="entry__textarea"
                    cols="120"
                    id="content"
                    name="content"
                    onChange={[Function]}
                    placeholder="Please describe the blog"
                    rows="20"
                    type="text"
          />
          <br />
          <br />
          <input
                    className="button"
                    type="submit"
                    value="Save entry"
          />
</form>,
      ],
      "className": "entry__container",
    },
    "ref": null,
    "rendered": Array [
      "",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor="title"
>
              Title:
</label>,
            <br />,
            <input
              id="title"
              name="title"
              onChange={[Function]}
              placeholder="Blog title"
              type="text"
/>,
            <br />,
            <br />,
            <label
              htmlFor="content"
>
              Content:
</label>,
            <br />,
            <textarea
              className="entry__textarea"
              cols="120"
              id="content"
              name="content"
              onChange={[Function]}
              placeholder="Please describe the blog"
              rows="20"
              type="text"
/>,
            <br />,
            <br />,
            <input
              className="button"
              type="submit"
              value="Save entry"
/>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Title:",
              "htmlFor": "title",
            },
            "ref": null,
            "rendered": "Title:",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "title",
              "name": "title",
              "onChange": [Function],
              "placeholder": "Blog title",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Content:",
              "htmlFor": "content",
            },
            "ref": null,
            "rendered": "Content:",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "entry__textarea",
              "cols": "120",
              "id": "content",
              "name": "content",
              "onChange": [Function],
              "placeholder": "Please describe the blog",
              "rows": "20",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "textarea",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "button",
              "type": "submit",
              "value": "Save entry",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "",
          <form
            onSubmit={[Function]}
>
            <label
                        htmlFor="title"
            >
                        Title:
            </label>
            <br />
            <input
                        id="title"
                        name="title"
                        onChange={[Function]}
                        placeholder="Blog title"
                        type="text"
            />
            <br />
            <br />
            <label
                        htmlFor="content"
            >
                        Content:
            </label>
            <br />
            <textarea
                        className="entry__textarea"
                        cols="120"
                        id="content"
                        name="content"
                        onChange={[Function]}
                        placeholder="Please describe the blog"
                        rows="20"
                        type="text"
            />
            <br />
            <br />
            <input
                        className="button"
                        type="submit"
                        value="Save entry"
            />
</form>,
        ],
        "className": "entry__container",
      },
      "ref": null,
      "rendered": Array [
        "",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor="title"
>
                Title:
</label>,
              <br />,
              <input
                id="title"
                name="title"
                onChange={[Function]}
                placeholder="Blog title"
                type="text"
/>,
              <br />,
              <br />,
              <label
                htmlFor="content"
>
                Content:
</label>,
              <br />,
              <textarea
                className="entry__textarea"
                cols="120"
                id="content"
                name="content"
                onChange={[Function]}
                placeholder="Please describe the blog"
                rows="20"
                type="text"
/>,
              <br />,
              <br />,
              <input
                className="button"
                type="submit"
                value="Save entry"
/>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Title:",
                "htmlFor": "title",
              },
              "ref": null,
              "rendered": "Title:",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "title",
                "name": "title",
                "onChange": [Function],
                "placeholder": "Blog title",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Content:",
                "htmlFor": "content",
              },
              "ref": null,
              "rendered": "Content:",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "entry__textarea",
                "cols": "120",
                "id": "content",
                "name": "content",
                "onChange": [Function],
                "placeholder": "Please describe the blog",
                "rows": "20",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "textarea",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "button",
                "type": "submit",
                "value": "Save entry",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`should submit with valid input and no error 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EntryFormPage
    onSubmit={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        "",
        <form
          onSubmit={[Function]}
>
          <label
                    htmlFor="title"
          >
                    Title:
          </label>
          <br />
          <input
                    id="title"
                    name="title"
                    onChange={[Function]}
                    placeholder="Blog title"
                    type="text"
          />
          <br />
          <br />
          <label
                    htmlFor="content"
          >
                    Content:
          </label>
          <br />
          <textarea
                    className="entry__textarea"
                    cols="120"
                    id="content"
                    name="content"
                    onChange={[Function]}
                    placeholder="Please describe the blog"
                    rows="20"
                    type="text"
          />
          <br />
          <br />
          <input
                    className="button"
                    type="submit"
                    value="Save entry"
          />
</form>,
      ],
      "className": "entry__container",
    },
    "ref": null,
    "rendered": Array [
      "",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor="title"
>
              Title:
</label>,
            <br />,
            <input
              id="title"
              name="title"
              onChange={[Function]}
              placeholder="Blog title"
              type="text"
/>,
            <br />,
            <br />,
            <label
              htmlFor="content"
>
              Content:
</label>,
            <br />,
            <textarea
              className="entry__textarea"
              cols="120"
              id="content"
              name="content"
              onChange={[Function]}
              placeholder="Please describe the blog"
              rows="20"
              type="text"
/>,
            <br />,
            <br />,
            <input
              className="button"
              type="submit"
              value="Save entry"
/>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Title:",
              "htmlFor": "title",
            },
            "ref": null,
            "rendered": "Title:",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "title",
              "name": "title",
              "onChange": [Function],
              "placeholder": "Blog title",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Content:",
              "htmlFor": "content",
            },
            "ref": null,
            "rendered": "Content:",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "entry__textarea",
              "cols": "120",
              "id": "content",
              "name": "content",
              "onChange": [Function],
              "placeholder": "Please describe the blog",
              "rows": "20",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "textarea",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "button",
              "type": "submit",
              "value": "Save entry",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "",
          <form
            onSubmit={[Function]}
>
            <label
                        htmlFor="title"
            >
                        Title:
            </label>
            <br />
            <input
                        id="title"
                        name="title"
                        onChange={[Function]}
                        placeholder="Blog title"
                        type="text"
            />
            <br />
            <br />
            <label
                        htmlFor="content"
            >
                        Content:
            </label>
            <br />
            <textarea
                        className="entry__textarea"
                        cols="120"
                        id="content"
                        name="content"
                        onChange={[Function]}
                        placeholder="Please describe the blog"
                        rows="20"
                        type="text"
            />
            <br />
            <br />
            <input
                        className="button"
                        type="submit"
                        value="Save entry"
            />
</form>,
        ],
        "className": "entry__container",
      },
      "ref": null,
      "rendered": Array [
        "",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor="title"
>
                Title:
</label>,
              <br />,
              <input
                id="title"
                name="title"
                onChange={[Function]}
                placeholder="Blog title"
                type="text"
/>,
              <br />,
              <br />,
              <label
                htmlFor="content"
>
                Content:
</label>,
              <br />,
              <textarea
                className="entry__textarea"
                cols="120"
                id="content"
                name="content"
                onChange={[Function]}
                placeholder="Please describe the blog"
                rows="20"
                type="text"
/>,
              <br />,
              <br />,
              <input
                className="button"
                type="submit"
                value="Save entry"
/>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Title:",
                "htmlFor": "title",
              },
              "ref": null,
              "rendered": "Title:",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "title",
                "name": "title",
                "onChange": [Function],
                "placeholder": "Blog title",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Content:",
                "htmlFor": "content",
              },
              "ref": null,
              "rendered": "Content:",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "entry__textarea",
                "cols": "120",
                "id": "content",
                "name": "content",
                "onChange": [Function],
                "placeholder": "Please describe the blog",
                "rows": "20",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "textarea",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "button",
                "type": "submit",
                "value": "Save entry",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
